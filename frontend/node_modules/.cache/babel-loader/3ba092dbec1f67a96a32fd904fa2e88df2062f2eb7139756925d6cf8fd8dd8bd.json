{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hastik Pangi\\\\Desktop\\\\smart expense splitter\\\\frontend\\\\src\\\\components\\\\BillScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Typography, CircularProgress } from '@mui/material';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BillScanner({\n  onScanComplete\n}) {\n  _s();\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState('');\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setResult('');\n    }\n  };\n  const handleScan = async () => {\n    if (!image) return;\n    setLoading(true);\n    const {\n      data\n    } = await Tesseract.recognize(image, 'eng');\n    setResult(data.text);\n    setLoading(false);\n    if (onScanComplete) onScanComplete(data.text);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      bgcolor: 'background.paper',\n      borderRadius: 2,\n      boxShadow: 2,\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      sx: {\n        mb: 2\n      },\n      children: \"Scan Bill (OCR)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      sx: {\n        mt: 2\n      },\n      onClick: handleScan,\n      disabled: !image || loading,\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this) : 'Scan Bill'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"secondary\",\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(BillScanner, \"LXOBrMb3r4egSv/eQ6rHM0Cw7s0=\");\n_c = BillScanner;\nexport default BillScanner;\nvar _c;\n$RefreshReg$(_c, \"BillScanner\");","map":{"version":3,"names":["React","useState","Box","Button","Typography","CircularProgress","Tesseract","jsxDEV","_jsxDEV","BillScanner","onScanComplete","_s","image","setImage","loading","setLoading","result","setResult","handleFileChange","e","target","files","handleScan","data","recognize","text","sx","p","bgcolor","borderRadius","boxShadow","mb","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","mt","onClick","disabled","size","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/Hastik Pangi/Desktop/smart expense splitter/frontend/src/components/BillScanner.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, Typography, CircularProgress } from '@mui/material';\r\nimport Tesseract from 'tesseract.js';\r\n\r\nfunction BillScanner({ onScanComplete }) {\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n      setResult('');\r\n    }\r\n  };\r\n\r\n  const handleScan = async () => {\r\n    if (!image) return;\r\n    setLoading(true);\r\n    const { data } = await Tesseract.recognize(image, 'eng');\r\n    setResult(data.text);\r\n    setLoading(false);\r\n    if (onScanComplete) onScanComplete(data.text);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 2, mb: 2 }}>\r\n      <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\r\n        Scan Bill (OCR)\r\n      </Typography>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      <Button variant=\"contained\" color=\"secondary\" sx={{ mt: 2 }} onClick={handleScan} disabled={!image || loading}>\r\n        {loading ? <CircularProgress size={24} /> : 'Scan Bill'}\r\n      </Button>\r\n      {result && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Typography variant=\"subtitle1\" color=\"secondary\">Extracted Text:</Typography>\r\n          <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{result}</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BillScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}