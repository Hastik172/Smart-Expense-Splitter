{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hastik Pangi\\\\Desktop\\\\smart expense splitter\\\\frontend\\\\src\\\\pages\\\\Groups.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Container, Box, TextField, Button } from '@mui/material';\nimport CartoonAvatars from '../components/CartoonAvatars';\nimport BillScanner from '../components/BillScanner';\nimport { getGroupExpenses, addGroupExpense } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleDeleteGroup = groupNameToDelete => {\n  setGroups(groups.filter(g => g.name !== groupNameToDelete));\n  if (selectedGroup && selectedGroup.name === groupNameToDelete) {\n    setSelectedGroup(null);\n  }\n  setExpenses(expenses.filter(exp => exp.group !== groupNameToDelete));\n};\nconst initialGroups = [{\n  name: 'Trip to Goa',\n  members: ['Alice', 'Bob', 'Charlie', 'David']\n}, {\n  name: 'Project Team',\n  members: ['Eve', 'Frank', 'Grace']\n}, {\n  name: 'Family',\n  members: ['Mom', 'Dad', 'Me', 'Sis', 'Bro']\n}];\nfunction Groups() {\n  _s();\n  const [groups, setGroups] = useState(initialGroups);\n  const [groupName, setGroupName] = useState('');\n  const [memberNames, setMemberNames] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [expenseDesc, setExpenseDesc] = useState('');\n  const [expenses, setExpenses] = useState([]);\n  const [splitType, setSplitType] = useState('equal');\n  const [customSplits, setCustomSplits] = useState({});\n  const [scannedText, setScannedText] = useState('');\n  const handleAddGroup = e => {\n    e.preventDefault();\n    if (groupName && memberNames) {\n      const membersArr = memberNames.split(',').map(m => m.trim()).filter(Boolean);\n      setGroups([...groups, {\n        name: groupName,\n        members: membersArr\n      }]);\n      setGroupName('');\n      setMemberNames('');\n    }\n  };\n  const handleAddExpense = e => {\n    e.preventDefault();\n    if (selectedGroup && expenseAmount && expenseDesc) {\n      let split = {};\n      if (splitType === 'equal') {\n        const perMember = parseFloat(expenseAmount) / selectedGroup.members.length;\n        selectedGroup.members.forEach(m => {\n          split[m] = perMember;\n        });\n      } else {\n        split = {\n          ...customSplits\n        };\n      }\n      setExpenses([...expenses, {\n        group: selectedGroup.name,\n        amount: parseFloat(expenseAmount),\n        desc: expenseDesc,\n        members: selectedGroup.members,\n        split\n      }]);\n      setExpenseAmount('');\n      setExpenseDesc('');\n      setCustomSplits({});\n    }\n  };\n\n  // Calculate split for each expense\n  const getSplitDetails = expense => {\n    return expense.members.map(m => {\n      var _expense$split$m;\n      return `${m}: â‚¹${((_expense$split$m = expense.split[m]) === null || _expense$split$m === void 0 ? void 0 : _expense$split$m.toFixed(2)) || '0.00'}`;\n    }).join(', ');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      color: \"primary\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleAddGroup,\n      sx: {\n        mb: 4,\n        display: 'flex',\n        gap: 2,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Group Name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Members (comma separated)\",\n        value: memberNames,\n        onChange: e => setMemberNames(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), groups.map((group, idx) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        p: 2,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"secondary\",\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartoonAvatars, {\n        count: group.members.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 1\n        },\n        children: [\"Members: \", group.members.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setSelectedGroup(group),\n          children: \"Start Personal Expenses for this Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => handleDeleteGroup(group.name),\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)), selectedGroup && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 2,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        children: [\"Selected Group: \", selectedGroup.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Members: \", selectedGroup.members.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleAddExpense,\n        sx: {\n          mt: 2,\n          display: 'flex',\n          gap: 2,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(BillScanner, {\n          onScanComplete: setScannedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), scannedText && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            p: 2,\n            bgcolor: 'background.paper',\n            borderRadius: 2,\n            boxShadow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"secondary\",\n            children: \"Bill Data Preview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: scannedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Expense Amount\",\n          type: \"number\",\n          value: expenseAmount,\n          onChange: e => setExpenseAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          value: expenseDesc,\n          onChange: e => setExpenseDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minWidth: 180\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 8\n            },\n            children: \"Split Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: splitType,\n            onChange: e => setSplitType(e.target.value),\n            style: {\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"equal\",\n              children: \"Equally\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), splitType === 'custom' && selectedGroup && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"secondary\",\n            children: \"Enter amount for each member:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), selectedGroup.members.map(m => /*#__PURE__*/_jsxDEV(TextField, {\n            label: m,\n            type: \"number\",\n            value: customSplits[m] || '',\n            onChange: e => {\n              const value = e.target.value;\n              setCustomSplits(s => ({\n                ...s,\n                [m]: value ? parseFloat(value) : ''\n              }));\n            }\n            // required removed\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add Expense & Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), expenses.filter(exp => exp.group === selectedGroup.name).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"secondary\",\n          children: \"Group Expenses & Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), expenses.filter(exp => exp.group === selectedGroup.name).map((exp, idx) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            mb: 2,\n            bgcolor: 'background.paper',\n            borderRadius: 2,\n            boxShadow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Amount: \\u20B9\", exp.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Description: \", exp.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Split: \", getSplitDetails(exp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Groups, \"bpobBNLFx0CwwT7fpC9O+oi5wu8=\");\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Container","Box","TextField","Button","CartoonAvatars","BillScanner","getGroupExpenses","addGroupExpense","jsxDEV","_jsxDEV","handleDeleteGroup","groupNameToDelete","setGroups","groups","filter","g","name","selectedGroup","setSelectedGroup","setExpenses","expenses","exp","group","initialGroups","members","Groups","_s","groupName","setGroupName","memberNames","setMemberNames","expenseAmount","setExpenseAmount","expenseDesc","setExpenseDesc","splitType","setSplitType","customSplits","setCustomSplits","scannedText","setScannedText","handleAddGroup","e","preventDefault","membersArr","split","map","m","trim","Boolean","handleAddExpense","perMember","parseFloat","length","forEach","amount","desc","getSplitDetails","expense","_expense$split$m","toFixed","join","children","variant","sx","mt","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","display","gap","flexWrap","label","value","onChange","target","required","type","idx","p","bgcolor","borderRadius","boxShadow","count","onClick","onScanComplete","whiteSpace","minWidth","style","marginRight","padding","border","flexDirection","s","_c","$RefreshReg$"],"sources":["C:/Users/Hastik Pangi/Desktop/smart expense splitter/frontend/src/pages/Groups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Container, Box, TextField, Button } from '@mui/material';\r\nimport CartoonAvatars from '../components/CartoonAvatars';\r\nimport BillScanner from '../components/BillScanner';\r\nimport { getGroupExpenses, addGroupExpense } from '../api';\r\n const handleDeleteGroup = (groupNameToDelete) => {\r\n    setGroups(groups.filter(g => g.name !== groupNameToDelete));\r\n    if (selectedGroup && selectedGroup.name === groupNameToDelete) {\r\n      setSelectedGroup(null);\r\n    }\r\n    setExpenses(expenses.filter(exp => exp.group !== groupNameToDelete));\r\n  };\r\n\r\n\r\nconst initialGroups = [\r\n  { name: 'Trip to Goa', members: ['Alice', 'Bob', 'Charlie', 'David'] },\r\n  { name: 'Project Team', members: ['Eve', 'Frank', 'Grace'] },\r\n  { name: 'Family', members: ['Mom', 'Dad', 'Me', 'Sis', 'Bro'] },\r\n];\r\n\r\nfunction Groups() {\r\n  const [groups, setGroups] = useState(initialGroups);\r\n  const [groupName, setGroupName] = useState('');\r\n  const [memberNames, setMemberNames] = useState('');\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [expenseAmount, setExpenseAmount] = useState('');\r\n  const [expenseDesc, setExpenseDesc] = useState('');\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [splitType, setSplitType] = useState('equal');\r\n  const [customSplits, setCustomSplits] = useState({});\r\n  const [scannedText, setScannedText] = useState('');\r\n\r\n  const handleAddGroup = (e) => {\r\n    e.preventDefault();\r\n    if (groupName && memberNames) {\r\n      const membersArr = memberNames.split(',').map(m => m.trim()).filter(Boolean);\r\n      setGroups([...groups, { name: groupName, members: membersArr }]);\r\n      setGroupName('');\r\n      setMemberNames('');\r\n    }\r\n  };\r\n\r\n  const handleAddExpense = (e) => {\r\n    e.preventDefault();\r\n    if (selectedGroup && expenseAmount && expenseDesc) {\r\n      let split = {};\r\n      if (splitType === 'equal') {\r\n        const perMember = parseFloat(expenseAmount) / selectedGroup.members.length;\r\n        selectedGroup.members.forEach(m => {\r\n          split[m] = perMember;\r\n        });\r\n      } else {\r\n        split = { ...customSplits };\r\n      }\r\n      setExpenses([...expenses, {\r\n        group: selectedGroup.name,\r\n        amount: parseFloat(expenseAmount),\r\n        desc: expenseDesc,\r\n        members: selectedGroup.members,\r\n        split\r\n      }]);\r\n      setExpenseAmount('');\r\n      setExpenseDesc('');\r\n      setCustomSplits({});\r\n    }\r\n  };\r\n\r\n  // Calculate split for each expense\r\n  const getSplitDetails = (expense) => {\r\n    return expense.members.map(m => `${m}: â‚¹${expense.split[m]?.toFixed(2) || '0.00'}`).join(', ');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" sx={{ mt: 4, mb: 2 }} color=\"primary\">\r\n        Groups\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleAddGroup} sx={{ mb: 4, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n        <TextField label=\"Group Name\" value={groupName} onChange={e => setGroupName(e.target.value)} required />\r\n        <TextField label=\"Members (comma separated)\" value={memberNames} onChange={e => setMemberNames(e.target.value)} required />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">Add Group</Button>\r\n      </Box>\r\n      {groups.map((group, idx) => (\r\n        <Box key={idx} sx={{ mb: 4, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 3 }}>\r\n          <Typography variant=\"h6\" color=\"secondary\">{group.name}</Typography>\r\n          <CartoonAvatars count={group.members.length} />\r\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>Members: {group.members.join(', ')}</Typography>\r\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\r\n            <Button variant=\"outlined\" onClick={() => setSelectedGroup(group)}>\r\n              Start Personal Expenses for this Group\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"error\" onClick={() => handleDeleteGroup(group.name)}>\r\n              Delete Group\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n      {selectedGroup && (\r\n        <Box sx={{ mt: 4, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 3 }}>\r\n          <Typography variant=\"h6\" color=\"primary\">Selected Group: {selectedGroup.name}</Typography>\r\n          <Typography variant=\"body2\">Members: {selectedGroup.members.join(', ')}</Typography>\r\n          <Box component=\"form\" onSubmit={handleAddExpense} sx={{ mt: 2, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n          <BillScanner onScanComplete={setScannedText} />\r\n          {scannedText && (\r\n            <Box sx={{ mt: 2, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1 }}>\r\n              <Typography variant=\"subtitle1\" color=\"secondary\">Bill Data Preview:</Typography>\r\n              <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{scannedText}</Typography>\r\n            </Box>\r\n          )}\r\n            <TextField label=\"Expense Amount\" type=\"number\" value={expenseAmount} onChange={e => setExpenseAmount(e.target.value)} />\r\n            <TextField label=\"Description\" value={expenseDesc} onChange={e => setExpenseDesc(e.target.value)} />\r\n            <Box sx={{ minWidth: 180 }}>\r\n              <label style={{ marginRight: 8 }}>Split Type:</label>\r\n              <select value={splitType} onChange={e => setSplitType(e.target.value)} style={{ padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}>\r\n                <option value=\"equal\">Equally</option>\r\n                <option value=\"custom\">Custom</option>\r\n              </select>\r\n            </Box>\r\n            {splitType === 'custom' && selectedGroup && (\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, mt: 2 }}>\r\n                <Typography variant=\"body2\" color=\"secondary\">Enter amount for each member:</Typography>\r\n                {selectedGroup.members.map(m => (\r\n                  <TextField\r\n                    key={m}\r\n                    label={m}\r\n                    type=\"number\"\r\n                    value={customSplits[m] || ''}\r\n                    onChange={e => {\r\n                      const value = e.target.value;\r\n                      setCustomSplits(s => ({ ...s, [m]: value ? parseFloat(value) : '' }));\r\n                    }}\r\n                    // required removed\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Add Expense & Split</Button>\r\n          </Box>\r\n          {expenses.filter(exp => exp.group === selectedGroup.name).length > 0 && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography variant=\"h6\" color=\"secondary\">Group Expenses & Split</Typography>\r\n              {expenses.filter(exp => exp.group === selectedGroup.name).map((exp, idx) => (\r\n                <Box key={idx} sx={{ p: 2, mb: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1 }}>\r\n                  <Typography>Amount: â‚¹{exp.amount}</Typography>\r\n                  <Typography>Description: {exp.desc}</Typography>\r\n                  <Typography>Split: {getSplitDetails(exp)}</Typography>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}