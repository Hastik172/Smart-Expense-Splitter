{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hastik Pangi\\\\Desktop\\\\smart expense splitter\\\\frontend\\\\src\\\\pages\\\\Groups.js\",\n  _s = $RefreshSig$();\nconst handleDeleteGroup = groupNameToDelete => {\n  setGroups(groups.filter(g => g.name !== groupNameToDelete));\n  if (selectedGroup && selectedGroup.name === groupNameToDelete) {\n    setSelectedGroup(null);\n  }\n  setExpenses(expenses.filter(exp => exp.group !== groupNameToDelete));\n};\nconst initialGroups = [{\n  name: 'Trip to Goa',\n  members: ['Alice', 'Bob', 'Charlie', 'David']\n}, {\n  name: 'Project Team',\n  members: ['Eve', 'Frank', 'Grace']\n}, {\n  name: 'Family',\n  members: ['Mom', 'Dad', 'Me', 'Sis', 'Bro']\n}];\nfunction Groups() {\n  _s();\n  const [groups, setGroups] = useState(initialGroups);\n  const [groupName, setGroupName] = useState('');\n  const [memberNames, setMemberNames] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [expenseDesc, setExpenseDesc] = useState('');\n  const [expenses, setExpenses] = useState([]);\n  const [splitType, setSplitType] = useState('equal');\n  const [customSplits, setCustomSplits] = useState({});\n  const [scannedText, setScannedText] = useState('');\n  const handleAddGroup = e => {\n    e.preventDefault();\n    if (groupName && memberNames) {\n      const membersArr = memberNames.split(',').map(m => m.trim()).filter(Boolean);\n      setGroups([...groups, {\n        name: groupName,\n        members: membersArr\n      }]);\n      setGroupName('');\n      setMemberNames('');\n    }\n  };\n  const handleAddExpense = e => {\n    e.preventDefault();\n    if (selectedGroup && expenseAmount && expenseDesc) {\n      let split = {};\n      if (splitType === 'equal') {\n        const perMember = parseFloat(expenseAmount) / selectedGroup.members.length;\n        selectedGroup.members.forEach(m => {\n          split[m] = perMember;\n        });\n      } else {\n        split = {\n          ...customSplits\n        };\n      }\n      setExpenses([...expenses, {\n        group: selectedGroup.name,\n        amount: parseFloat(expenseAmount),\n        desc: expenseDesc,\n        members: selectedGroup.members,\n        split\n      }]);\n      setExpenseAmount('');\n      setExpenseDesc('');\n      setCustomSplits({});\n    }\n  };\n\n  // Calculate split for each expense\n  const getSplitDetails = expense => {\n    return expense.members.map(m => {\n      var _expense$split$m;\n      return `${m}: â‚¹${((_expense$split$m = expense.split[m]) === null || _expense$split$m === void 0 ? void 0 : _expense$split$m.toFixed(2)) || '0.00'}`;\n    }).join(', ');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      color: \"primary\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleAddGroup,\n      sx: {\n        mb: 4,\n        display: 'flex',\n        gap: 2,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Group Name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Members (comma separated)\",\n        value: memberNames,\n        onChange: e => setMemberNames(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), groups.map((group, idx) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        p: 2,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"secondary\",\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartoonAvatars, {\n        count: group.members.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 1\n        },\n        children: [\"Members: \", group.members.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setSelectedGroup(group),\n          children: \"Start Personal Expenses for this Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => handleDeleteGroup(group.name),\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)), selectedGroup && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 2,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        children: [\"Selected Group: \", selectedGroup.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Members: \", selectedGroup.members.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleAddExpense,\n        sx: {\n          mt: 2,\n          display: 'flex',\n          gap: 2,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(BillScanner, {\n          onScanComplete: setScannedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), scannedText && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            p: 2,\n            bgcolor: 'background.paper',\n            borderRadius: 2,\n            boxShadow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"secondary\",\n            children: \"Bill Data Preview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: scannedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Expense Amount\",\n          type: \"number\",\n          value: expenseAmount,\n          onChange: e => setExpenseAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          value: expenseDesc,\n          onChange: e => setExpenseDesc(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minWidth: 180\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 8\n            },\n            children: \"Split Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: splitType,\n            onChange: e => setSplitType(e.target.value),\n            style: {\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"equal\",\n              children: \"Equally\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), splitType === 'custom' && selectedGroup && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"secondary\",\n            children: \"Enter amount for each member:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), selectedGroup.members.map(m => /*#__PURE__*/_jsxDEV(TextField, {\n            label: m,\n            type: \"number\",\n            value: customSplits[m] || '',\n            onChange: e => {\n              const value = e.target.value;\n              setCustomSplits(s => ({\n                ...s,\n                [m]: value ? parseFloat(value) : ''\n              }));\n            },\n            required: true\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add Expense & Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), expenses.filter(exp => exp.group === selectedGroup.name).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"secondary\",\n          children: \"Group Expenses & Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), expenses.filter(exp => exp.group === selectedGroup.name).map((exp, idx) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            mb: 2,\n            bgcolor: 'background.paper',\n            borderRadius: 2,\n            boxShadow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Amount: \\u20B9\", exp.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Description: \", exp.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Split: \", getSplitDetails(exp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Groups, \"bpobBNLFx0CwwT7fpC9O+oi5wu8=\");\n_c = Groups;\nexport default Groups;\nimport React, { useState } from 'react';\nimport { Typography, Container, Box, TextField, Button } from '@mui/material';\nimport CartoonAvatars from '../components/CartoonAvatars';\nimport BillScanner from '../components/BillScanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["handleDeleteGroup","groupNameToDelete","setGroups","groups","filter","g","name","selectedGroup","setSelectedGroup","setExpenses","expenses","exp","group","initialGroups","members","Groups","_s","useState","groupName","setGroupName","memberNames","setMemberNames","expenseAmount","setExpenseAmount","expenseDesc","setExpenseDesc","splitType","setSplitType","customSplits","setCustomSplits","scannedText","setScannedText","handleAddGroup","e","preventDefault","membersArr","split","map","m","trim","Boolean","handleAddExpense","perMember","parseFloat","length","forEach","amount","desc","getSplitDetails","expense","_expense$split$m","toFixed","join","_jsxDEV","Container","children","Typography","variant","sx","mt","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","Box","component","onSubmit","display","gap","flexWrap","TextField","label","value","onChange","target","required","Button","type","idx","p","bgcolor","borderRadius","boxShadow","CartoonAvatars","count","onClick","BillScanner","onScanComplete","whiteSpace","minWidth","style","marginRight","padding","border","flexDirection","s","_c","React","jsxDEV","$RefreshReg$"],"sources":["C:/Users/Hastik Pangi/Desktop/smart expense splitter/frontend/src/pages/Groups.js"],"sourcesContent":["  const handleDeleteGroup = (groupNameToDelete) => {\r\n    setGroups(groups.filter(g => g.name !== groupNameToDelete));\r\n    if (selectedGroup && selectedGroup.name === groupNameToDelete) {\r\n      setSelectedGroup(null);\r\n    }\r\n    setExpenses(expenses.filter(exp => exp.group !== groupNameToDelete));\r\n  };\r\n\r\n\r\nconst initialGroups = [\r\n  { name: 'Trip to Goa', members: ['Alice', 'Bob', 'Charlie', 'David'] },\r\n  { name: 'Project Team', members: ['Eve', 'Frank', 'Grace'] },\r\n  { name: 'Family', members: ['Mom', 'Dad', 'Me', 'Sis', 'Bro'] },\r\n];\r\n\r\nfunction Groups() {\r\n  const [groups, setGroups] = useState(initialGroups);\r\n  const [groupName, setGroupName] = useState('');\r\n  const [memberNames, setMemberNames] = useState('');\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [expenseAmount, setExpenseAmount] = useState('');\r\n  const [expenseDesc, setExpenseDesc] = useState('');\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [splitType, setSplitType] = useState('equal');\r\n  const [customSplits, setCustomSplits] = useState({});\r\n  const [scannedText, setScannedText] = useState('');\r\n\r\n  const handleAddGroup = (e) => {\r\n    e.preventDefault();\r\n    if (groupName && memberNames) {\r\n      const membersArr = memberNames.split(',').map(m => m.trim()).filter(Boolean);\r\n      setGroups([...groups, { name: groupName, members: membersArr }]);\r\n      setGroupName('');\r\n      setMemberNames('');\r\n    }\r\n  };\r\n\r\n  const handleAddExpense = (e) => {\r\n    e.preventDefault();\r\n    if (selectedGroup && expenseAmount && expenseDesc) {\r\n      let split = {};\r\n      if (splitType === 'equal') {\r\n        const perMember = parseFloat(expenseAmount) / selectedGroup.members.length;\r\n        selectedGroup.members.forEach(m => {\r\n          split[m] = perMember;\r\n        });\r\n      } else {\r\n        split = { ...customSplits };\r\n      }\r\n      setExpenses([...expenses, {\r\n        group: selectedGroup.name,\r\n        amount: parseFloat(expenseAmount),\r\n        desc: expenseDesc,\r\n        members: selectedGroup.members,\r\n        split\r\n      }]);\r\n      setExpenseAmount('');\r\n      setExpenseDesc('');\r\n      setCustomSplits({});\r\n    }\r\n  };\r\n\r\n  // Calculate split for each expense\r\n  const getSplitDetails = (expense) => {\r\n    return expense.members.map(m => `${m}: â‚¹${expense.split[m]?.toFixed(2) || '0.00'}`).join(', ');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" sx={{ mt: 4, mb: 2 }} color=\"primary\">\r\n        Groups\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleAddGroup} sx={{ mb: 4, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n        <TextField label=\"Group Name\" value={groupName} onChange={e => setGroupName(e.target.value)} required />\r\n        <TextField label=\"Members (comma separated)\" value={memberNames} onChange={e => setMemberNames(e.target.value)} required />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">Add Group</Button>\r\n      </Box>\r\n      {groups.map((group, idx) => (\r\n        <Box key={idx} sx={{ mb: 4, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 3 }}>\r\n          <Typography variant=\"h6\" color=\"secondary\">{group.name}</Typography>\r\n          <CartoonAvatars count={group.members.length} />\r\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>Members: {group.members.join(', ')}</Typography>\r\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\r\n            <Button variant=\"outlined\" onClick={() => setSelectedGroup(group)}>\r\n              Start Personal Expenses for this Group\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"error\" onClick={() => handleDeleteGroup(group.name)}>\r\n              Delete Group\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n      {selectedGroup && (\r\n        <Box sx={{ mt: 4, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 3 }}>\r\n          <Typography variant=\"h6\" color=\"primary\">Selected Group: {selectedGroup.name}</Typography>\r\n          <Typography variant=\"body2\">Members: {selectedGroup.members.join(', ')}</Typography>\r\n          <Box component=\"form\" onSubmit={handleAddExpense} sx={{ mt: 2, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n          <BillScanner onScanComplete={setScannedText} />\r\n          {scannedText && (\r\n            <Box sx={{ mt: 2, p: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1 }}>\r\n              <Typography variant=\"subtitle1\" color=\"secondary\">Bill Data Preview:</Typography>\r\n              <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{scannedText}</Typography>\r\n            </Box>\r\n          )}\r\n            <TextField label=\"Expense Amount\" type=\"number\" value={expenseAmount} onChange={e => setExpenseAmount(e.target.value)} required />\r\n            <TextField label=\"Description\" value={expenseDesc} onChange={e => setExpenseDesc(e.target.value)} required />\r\n            <Box sx={{ minWidth: 180 }}>\r\n              <label style={{ marginRight: 8 }}>Split Type:</label>\r\n              <select value={splitType} onChange={e => setSplitType(e.target.value)} style={{ padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}>\r\n                <option value=\"equal\">Equally</option>\r\n                <option value=\"custom\">Custom</option>\r\n              </select>\r\n            </Box>\r\n            {splitType === 'custom' && selectedGroup && (\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, mt: 2 }}>\r\n                <Typography variant=\"body2\" color=\"secondary\">Enter amount for each member:</Typography>\r\n                {selectedGroup.members.map(m => (\r\n                  <TextField\r\n                    key={m}\r\n                    label={m}\r\n                    type=\"number\"\r\n                    value={customSplits[m] || ''}\r\n                    onChange={e => {\r\n                      const value = e.target.value;\r\n                      setCustomSplits(s => ({ ...s, [m]: value ? parseFloat(value) : '' }));\r\n                    }}\r\n                    required\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Add Expense & Split</Button>\r\n          </Box>\r\n          {expenses.filter(exp => exp.group === selectedGroup.name).length > 0 && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography variant=\"h6\" color=\"secondary\">Group Expenses & Split</Typography>\r\n              {expenses.filter(exp => exp.group === selectedGroup.name).map((exp, idx) => (\r\n                <Box key={idx} sx={{ p: 2, mb: 2, bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1 }}>\r\n                  <Typography>Amount: â‚¹{exp.amount}</Typography>\r\n                  <Typography>Description: {exp.desc}</Typography>\r\n                  <Typography>Split: {getSplitDetails(exp)}</Typography>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\n\r\nimport React, { useState } from 'react';\r\nimport { Typography, Container, Box, TextField, Button } from '@mui/material';\r\nimport CartoonAvatars from '../components/CartoonAvatars';\r\nimport BillScanner from '../components/BillScanner';\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}